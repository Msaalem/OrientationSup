#####################################################
<?php
$s = [ 'A'=> ['CNM', 'DSI', 'RSS'],
    'B'=> ['CNM', 'DSI', 'RSS'],
    'C'=> ['DSI', 'CNM', 'RSS'],
    'D'=> ['DSI', 'RSS', 'CNM'],
    'E'=> ['RSS', 'DSI', 'CNM'],
    'F'=> ['RSS', 'CNM', 'DSI']
];

// foreach($choix as $c => $value){
// 	echo $c .'<br>';
// }

$r = ['DSI'=> ['C', 'E', 'D', 'B', 'F', 'A'],
    'RSS'=> ['B', 'F', 'A', 'E', 'D', 'C'],
    'CNM'=> ['A', 'B', 'C', 'D', 'E', 'F']
];

$p = ['CNM' => 1,
    'DSI' => 2,
    'RSS' => 2];

function get_waiting_list_without_student($student,$waiting_students): array
{
    $waiting_list=[];
    foreach ($waiting_students as $s) {
        if ($s != $student) {
            array_push($waiting_list ,$s );
        }
    }
    return $waiting_list;
}

function get_sorted_results_with_student($student, $choice,$rankings,$matching_results): array
{
    array_push($matching_results[$choice],$student);
    $l=[];
    foreach ($rankings[$choice] as $x){
        if (in_array($x,$matching_results[$choice])){
            array_push($l,$x);
        }
    }
    return $l;
}


function get_matched_students($students, $rankings, $places){

    $waiting_students = ["A","B","C","D","E","F"];

    $matching_results = ['CNM' => [],
        'DSI' => [],
        'RSS' => [],];

    while (sizeof($waiting_students) > 0){
        $copy_waiting_students = $waiting_students;
        foreach($copy_waiting_students as $student) {
            if (sizeof($students[$student]) == 0) {
                $waiting_students = get_waiting_list_without_student($student,$waiting_students);
                continue;
            }
            $choice = array_shift($students[$student]);
            if (sizeof($matching_results[$choice]) < $places[$choice]) {
                $matching_results[$choice] = get_sorted_results_with_student($student, $choice ,$rankings,$matching_results);
                $waiting_students = get_waiting_list_without_student($student,$waiting_students);
            }

            else{
                if (array_search($student,$rankings[$choice]) < array_search($matching_results[$choice][sizeof($matching_results[$choice])-1] , $rankings[$choice])){
                    $matching_results[$choice] = get_sorted_results_with_student($student, $choice,$rankings,$matching_results);
                    $waiting_students = get_waiting_list_without_student($student,$waiting_students);
                    array_push($waiting_students,array_pop($matching_results[$choice]));
                    }
            }
            }
        }
    return $matching_results;
}
$k = get_matched_students($s, $r, $p);
print_r($k);
?>

#########################"


s = {
    'A': ['CNM', 'DSI', 'RSS'],
    'B': ['CNM', 'DSI', 'RSS'],
    'C': ['DSI', 'CNM', 'RSS'],
    'D': ['DSI', 'RSS', 'CNM'],
    'E': ['RSS', 'DSI', 'CNM'],
    'F': ['RSS', 'CNM', 'DSI']
}

r = {
    'DSI': ['C', 'E', 'D', 'B', 'F', 'A'],
    'RSS': ['B', 'F', 'A', 'E', 'D', 'C'],
    'CNM': ['A', 'B', 'C', 'D', 'E', 'F']
}

p = {
    'DSI': 2,
    'RSS': 2,
    'CNM': 1
}


def get_matched_students(students, rankings, places):
    waiting_students = [student for student in students]

    matching_results = {choice: [] for choice in places}

    def get_waiting_list_without_student(student):
        return [x for x in waiting_students if x != student]

    def get_sorted_results_with_student(student, choice):
        matching_results[choice].append(student)
        return [x for x in rankings[choice] if x in matching_results[choice]]

    while waiting_students:
        for student in waiting_students.copy():
            if not students[student]:
                waiting_students = get_waiting_list_without_student(student)
                continue
            choice = students[student].pop(0)
            if len(matching_results[choice]) < places[choice]:
                matching_results[choice] = get_sorted_results_with_student(student, choice)
                waiting_students = get_waiting_list_without_student(student)
            else:
                if rankings[choice].index(student) < rankings[choice].index(matching_results[choice][-1]):
                    matching_results[choice] = get_sorted_results_with_student(student, choice)
                    waiting_students = get_waiting_list_without_student(student)
                    waiting_students.append(matching_results[choice].pop())

    return matching_results


print(get_matched_students(s, r, p))
###################


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
<?php
$choix = ['A'=>['DSI', 'RSS', 'CNM'],
    'B'=> ['RSS', 'DSI', 'CNM'],
    'C'=> ['CNM', 'DSI', 'RSS'],
    'D'=> ['DSI', 'RSS', 'CNM'],
    'E'=> ['RSS', 'DSI', 'CNM'],
    'F'=> ['CNM', 'DSI', 'RSS'],
];

// foreach($choix as $c => $value){
// 	echo $c .'<br>';
// }

$classement = ['DSI'=>['B', 'E', 'C','D','A','F'],
    'RSS'=> ['C', 'F', 'A','B','E','D'],
    'CNM'=> ['A', 'D', 'B','C','E','F'],
];

$capacite = ['CNM' => 1,
    'DSI' => 2,
    'RSS' => 2,];

$capacite_restante = $capacite;
$resultats = [];
$etudiant_sans_choix = ['A', 'B', 'C', 'D', 'E', 'F'];
$choix_restante = $choix;

function list_de_etudiant_sans_choix_propose($etudiant_sans_choix, $choix_restante)
{
    $resultas = [];
    foreach ($etudiant_sans_choix as $e) {
        if (count($choix_restante[$e]) > 0) {
            array_push($resultas,$e);
            return $resultas;
        }
    }
    return $resultas;

}
function derniere_choix_moins_classer($e, $choix_restante, $resultats, $classement){
    $list_detudiant_par_choix = [];
    $list_de_classement = $classement[$choix_restante[$e][0]];
    $list_detudiant_classe = [];
    foreach ($resultats as $key => $value) {
        if ($resultats[$key] == $choix_restante[$e][0]) {
            array_push($list_detudiant_par_choix,$key);
        }
    }
    for ($i = 0; $i < count($list_de_classement); $i++) {
                if (in_array($list_de_classement[$i], $list_detudiant_par_choix)) {
                    array_push($list_detudiant_classe,$list_de_classement[$i]);
                }
            }
    if (array_search($e,array_keys($list_de_classement)) < array_search($e , array_keys($list_detudiant_classe[sizeof($list_detudiant_classe)-1]))){
        return $list_detudiant_classe[sizeof($list_detudiant_classe)-1];
    }
    return $e;
}
$list_etudiant_a_oriente = $etudiant_sans_choix;
$i = 0;
while (sizeof($list_etudiant_a_oriente) > 0) {
    $e = $list_etudiant_a_oriente[$i];
    $b =array_search($e, $list_etudiant_a_oriente);
    $pc = $choix_restante[$e][0];
        if ($capacite[$pc] > 0) {
            $resultats[$e] = $pc;
            $capacite_restante[$pc] -= 1;
            unset($etudiant_sans_choix[$b]);
            $i = $i+1;


        }
        else if (count($choix_restante[$e]) > 0) {
            $etudiant_moin_classe_que_e = derniere_choix_moins_classer($e, $choix_restante, $resultats, $classement);
            if ($etudiant_moin_classe_que_e != $e) {
                $c =array_search($etudiant_moin_classe_que_e, $resultats);
                unset($resultats[$c]);
                $resultats[$e] = $pc;
                $d =array_search($e, $etudiant_sans_choix);
                unset($etudiant_sans_choix[$d]);
                array_push($etudiant_sans_choix, $etudiant_moin_classe_que_e);

            }

        }
    $f =array_search($choix_restante[$e][0], $choix_restante);
    unset($choix_restante[$f]);
    $list_etudiant_a_oriente = list_de_etudiant_sans_choix_propose($etudiant_sans_choix, $choix_restante);
    }

foreach($resultats as $p){
    echo $p;
}

"""""""""""""""""""""""""""""""""""""""""""""""""""
<?php
$etudiants = [ 'A'=> ['CNM', 'DSI', 'RSS'],
    'B'=> ['CNM', 'DSI', 'RSS'],
    'C'=> ['DSI', 'CNM', 'RSS'],
    'D'=> ['DSI', 'RSS', 'CNM'],
    'E'=> ['RSS', 'DSI', 'CNM'],
    'F'=> ['RSS', 'CNM', 'DSI']
];

// foreach($choix as $c => $value){
// 	echo $c .'<br>';
// }

$classements = ['DSI'=> ['C', 'E', 'D', 'B', 'F', 'A'],
    'RSS'=> ['B', 'F', 'A', 'E', 'D', 'C'],
    'CNM'=> ['A', 'B', 'C', 'D', 'E', 'F']
];

$places = ['CNM' => 1,
    'DSI' => 2,
    'RSS' => 2];

function obtenir_une_liste_attente_sans_etudiant($etudiant, $etudiants_en_attente)
{
    $liste_attente=[];
    foreach ($etudiants_en_attente as $s) {
        if ($s != $etudiant) {
            array_push($liste_attente ,$s );
        }
    }
    return $liste_attente;
}

function obtenir_des_resultats_tries_avec_eleve($etudiant, $choix, $classements, $resultats)
{
    array_push($resultats[$choix],$etudiant);
    $l=[];
    foreach ($classements[$choix] as $x){
        if (in_array($x,$resultats[$choix])){
            array_push($l,$x);
        }

    }
    return $l;
}


function orienter_les_etudiants($etudiants, $classements, $places){

    $etudiants_en_attente = ["A","B","C","D","E","F"];

    $resultats = ['CNM' => [],
        'DSI' => [],
        'RSS' => [],];

    while (sizeof($etudiants_en_attente) > 0){
        $copy_etudiants_en_attente = $etudiants_en_attente;
        foreach($copy_etudiants_en_attente as $etudiant) {
            if (sizeof($etudiants[$etudiant]) == 0) {
                $etudiants_en_attente = obtenir_une_liste_attente_sans_etudiant($etudiant,$etudiants_en_attente);
                continue;
            }
            $choix = array_shift($etudiants[$etudiant]);
            if (sizeof($resultats[$choix]) < $places[$choix]) {
                $resultats[$choix] = obtenir_des_resultats_tries_avec_eleve($etudiant, $choix ,$classements,$resultats);
                $etudiants_en_attente = obtenir_une_liste_attente_sans_etudiant($etudiant,$etudiants_en_attente);
            }
            else{
                if (array_search($etudiant,$classements[$choix]) < array_search($resultats[$choix][sizeof($resultats[$choix])-1] , $classements[$choix])){
                    $resultats[$choix] = obtenir_des_resultats_tries_avec_eleve($etudiant, $choix,$classements,$resultats);
                    $etudiants_en_attente = obtenir_une_liste_attente_sans_etudiant($etudiant,$etudiants_en_attente);
                    array_push($etudiants_en_attente,array_pop($resultats[$choix]));
                    }
            }
            }
        }
    return $resultats;
}
$k = orienter_les_etudiants($etudiants, $classements, $places);
print_r($k);
?>
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
etudiants = {
    'A': ['CNM', 'DSI', 'RSS'],
    'B': ['CNM', 'DSI', 'RSS'],
    'C': ['DSI', 'CNM', 'RSS'],
    'D': ['DSI', 'RSS', 'CNM'],
    'E': ['RSS', 'DSI', 'CNM'],
    'F': ['RSS', 'CNM', 'DSI']
}

les_choix = {
    'DSI': ['C', 'E','D', 'B','F','A'],
    'RSS': ['B','F','A', 'E', 'D','C'],
    'CNM': ['A', 'B','C', 'D','E','F']
}
rss=2
cnm = 1
dsi=2
a=1
resultats = []
etudiants_sans_choix =[]

for etudiant in etudiants:
    etudiants_sans_choix.append(etudiant)

while (len(etudiants_sans_choix) > 0 and a<=36):
    for etudiant in etudiants_sans_choix:
        for choix in etudiants[etudiant]:
            choix_libre = [k for k in resultats if choix in k]
            if ((choix =="DSI" and dsi!=0) or (choix =="RSS" and rss!=0) or (choix =="CNM" and cnm!=0) ):
                resultats.append([etudiant, choix])
                etudiants_sans_choix.remove(etudiant)
                if(choix=="DSI"):
                    dsi-=1
                if (choix == "RSS"):
                    rss -= 1
                if (choix == "CNM"):
                    cnm -= 1
                break

            else:
                etudiant_actuel = les_choix[choix].index(choix_libre[0][0])
                etudiant_proposer = les_choix[choix].index(etudiant)

                if (etudiant_actuel < etudiant_proposer):
                    etudiants_sans_choix.remove(etudiant)

                    etudiants_sans_choix.append(choix_libre[0][0])

                    choix_libre[0][0] = etudiant
                    break

    a+=1
print(etudiants_sans_choix)
print(resultats)




etudiants = {
    'A': ['DSI', 'RSS', 'CNM'],
    'B': ['RSS', 'DSI', 'CNM'],
    'C': ['CNM', 'DSI', 'RSS'],
    'D': ['DSI', 'RSS', 'CNM'],
    'E': ['RSS', 'DSI', 'CNM'],
    'F': ['CNM', 'DSI', 'RSS']
}

choix = {
    'DSI': ['B', 'E','C', 'D','A','F'],
    'RSS': ['C','F','A', 'B', 'E','D'],
    'CNM': ['A', 'D','B', 'C','E','F']
}

rss = 2
cnm = 1
dsiSeats = 2
a=1
resultats = []

for etudiant in etudiants:
    etudiants_sans_choix.append(etudiant)

while (len(unassignedStudents) > 0 éé):
    for etudiant in unassignedStudents:
        for choix in choiceByStudent[etudiant]:
            choix_libre = [k for k in resultats if choix in k]
            if ((choix =="DSI" and dsiSeats!=0) or (choix =="RSS" and rssSeats!=0) or (choix =="CNM" and cnmSeats!=0) ):
                resultats.append([etudiant, choix])
                unassignedStudents.remove(etudiant)
                if(choix=="DSI"):
                    dsiSeats-=1
                if (choix == "RSS"):
                    rssSeats -= 1
                if (choix == "CNM"):
                    cnmSeats -= 1
                break

            else:
                etudiant_actuel = ratingByChoice[choix].index(choix_libre[0][0])
                etudiant_proposer = ratingByChoice[choix].index(etudiant)
                if (etudiant_actuel > etudiant_proposer):
                    unassignedStudents.remove(etudiant)
                    unassignedStudents.append(choix_libre[0][0])
                    choix_libre[0][0] = etudiant
                    break
print(unassignedStudents)
print(resultats)



********************************************************************



etudiants = {
    'A': ['CNM', 'DSI', 'RSS'],
    'B': ['CNM', 'DSI', 'RSS'],
    'C': ['DSI', 'CNM', 'RSS'],
    'D': ['CNM', 'DSI', 'RSS'],
    'E': ['DSI', 'CNM', 'RSS'],
}

les_choix = {
    'DSI': ['E','C', 'B','A','D' ],
    'RSS': ['B','E','D','C','A' ],
    'CNM': ['D','B','A','C','E'],
}
rss=2
cnm = 1
dsi=2
resultats = []
etudiants_sans_choix =[]

for etudiant in etudiants:
    etudiants_sans_choix.append(etudiant)

while (len(etudiants_sans_choix) > 0 ):
    for etudiant in etudiants_sans_choix:
        for choix in etudiants[etudiant]:
            choix_libre = [k for k in resultats if choix in k]
            if ((choix == "DSI" and dsi != 0) or (choix == "RSS" and rss != 0) or (choix == "CNM" and cnm != 0)):
                resultats.append([etudiant, choix])
                etudiants_sans_choix.remove(etudiant)
                if (choix == "DSI"):
                    dsi -= 1
                if (choix == "RSS"):
                    rss -= 1
                if (choix == "CNM"):
                    cnm -= 1
                break

            else:
                etudiant_actuel = les_choix[choix].index(choix_libre[0][0])
                etudiant_proposer = les_choix[choix].index(etudiant)

                if (etudiant_actuel > etudiant_proposer):
                    etudiants_sans_choix.remove(etudiant)

                    etudiants_sans_choix.append(choix_libre[0][0])

                    choix_libre[0][0] = etudiant
                    break


print(resultats)

************************************************************************

etudiants = {
    'A': ['DSI', 'RSS', 'CNM'],
    'B': ['RSS', 'DSI', 'CNM'],
    'C': ['CNM', 'DSI', 'RSS'],
    'D': ['DSI', 'RSS', 'CNM'],
    'E': ['RSS', 'DSI', 'CNM'],
    'F': ['CNM', 'DSI', 'RSS']
}

les_choix = {
    'DSI': ['B', 'E', 'C', 'D', 'A', 'F'],
    'RSS': ['C', 'F', 'A', 'B', 'E', 'D'],
    'CNM': ['A', 'D', 'B', 'C', 'E', 'F']
}
rss = 2
cnm = 1
dsi = 2
resultats = []
etudiants_sans_choix = []

for etudiant in etudiants:
    etudiants_sans_choix.append(etudiant)

while len(etudiants_sans_choix) > 0:
    for etudiant in etudiants_sans_choix:
        for i in range(3):
            choix = etudiants[etudiant][i]
            if (choix == "DSI" and dsi != 0) or (choix == "RSS" and rss != 0) or (choix == "CNM" and cnm != 0):
                resultats.append([etudiant, choix])
                etudiants_sans_choix.remove(etudiant)
                if choix == "DSI":
                    dsi -= 1
                if choix == "RSS":
                    rss -= 1
                if choix == "CNM":
                    cnm -= 1
                break

            else:
                choix_libre = [k for (k,v) in resultats if choix == v]
                etudiant_proposer = choix_libre[0]
                for k in choix_libre :
                    if les_choix[choix].index(k) > les_choix[choix].index(etudiant_proposer):
                        etudiant_proposer = k
                rating_etudiant_proposer = les_choix[choix].index(etudiant_proposer)
                rating_etudiant_actuel = les_choix[choix].index(etudiant)

                if rating_etudiant_proposer > rating_etudiant_actuel:
                    etudiants_sans_choix.remove(etudiant)
                    resultats.remove([etudiant_proposer, choix])
                    resultats.append([etudiant, choix])
                    etudiants_sans_choix.append(etudiant_proposer)
                    break
                elif i==2 :
                    etudiants_sans_choix.remove(etudiant)
                    break

print(etudiants_sans_choix)
print(resultats)

